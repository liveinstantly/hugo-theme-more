//
// assets/scss/base/_buttons.scss
//

// Buttons
.-square-btn {
    @extend .btn;
    border-radius: 0;
}

.-rounded-btn {
    @extend .btn;
    border-radius: $spacer;
    &-lg {
        border-radius: $spacer * 2;
    }
    &-sm {
        border-radius: $spacer;
    }
}

@each $color, $value in $theme-colors {
    .-square-btn-#{$color} {
        @if $color == 'light' {
            @include button-variant(
                $value,
                $value,
                $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
                $hover-border: shade-color($value, $btn-hover-border-shade-amount),
                $active-background: shade-color($value, $btn-active-bg-shade-amount),
                $active-border: shade-color($value, $btn-active-border-shade-amount)
            );
        } @else if $color == 'dark' {
            @include button-variant(
                $value,
                $value,
                $hover-background: tint-color($value, $btn-hover-bg-tint-amount),
                $hover-border: tint-color($value, $btn-hover-border-tint-amount),
                $active-background: tint-color($value, $btn-active-bg-tint-amount),
                $active-border: tint-color($value, $btn-active-border-tint-amount)
            );
        } @else {
            @include button-variant($value, $value);
        }
    }
}

@each $color, $value in $theme-colors {
    .-square-btn-outline-#{$color} {
        @include button-outline-variant($value);
    }
}

@each $color, $value in $theme-colors {
    .-rounded-btn-#{$color} {
        @if $color == 'light' {
            @include button-variant(
                $value,
                $value,
                $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
                $hover-border: shade-color($value, $btn-hover-border-shade-amount),
                $active-background: shade-color($value, $btn-active-bg-shade-amount),
                $active-border: shade-color($value, $btn-active-border-shade-amount)
            );
        } @else if $color == 'dark' {
            @include button-variant(
                $value,
                $value,
                $hover-background: tint-color($value, $btn-hover-bg-tint-amount),
                $hover-border: tint-color($value, $btn-hover-border-tint-amount),
                $active-background: tint-color($value, $btn-active-bg-tint-amount),
                $active-border: tint-color($value, $btn-active-border-tint-amount)
            );
        } @else {
            @include button-variant($value, $value);
        }
    }
}

@each $color, $value in $theme-colors {
    .-rounded-btn-outline-#{$color} {
        @include button-outline-variant($value);
    }
}

@if $enable-rounded {
    .btn {
        border-radius: 1rem;

        &-lg {
            border-radius: 2rem;
        }

        &-sm {
            border-radius: 1rem;
        }
    }
}
